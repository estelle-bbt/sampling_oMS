select(session, id, starts_with("r_")) |>
pivot_longer(
cols = starts_with(c("r_oms")),
names_to = "sex",
names_pattern = "r_oms_(fem|mal)_.*",
values_to = "r_oms"
)
cols
data_proxy |>
select(id, session,
nb_flo,nb_flo_open,nb_flo_all,height_max,height_mean,nb_stem,
!!sym(paste0("oms_fem_", cols)),
!!sym(paste0("oms_mal_", cols)))
data_proxy
data_proxy <- data_proxy$data_proxy
data_proxy |>
select(id, session,
nb_flo,nb_flo_open,nb_flo_all,height_max,height_mean,nb_stem,
!!sym(paste0("oms_fem_", cols)),
!!sym(paste0("oms_mal_", cols)))
data_id_sampled_sessions |>
select(session, ID_full, type, r_SR_out, r_SR_all, poll_treat_factor,
!!sym(paste0("r_mean_nb_dist_flo_out_", cols))) |>
rename(id = ID_full,
sex = type,
r_sr = r_SR_out,
r_sr_all = r_SR_all,
ttt = poll_treat_factor) |>
left_join(data_parent_share) |>
group_by(session,sex) |>
mutate(r_mean_ps = mean_ps / mean(mean_ps,na.rm = T),
r_mean_ps_all = mean_ps_all / mean(mean_ps_all,na.rm = T)) |>
ungroup() |>
select(!c(mean_ps,mean_ps_all)) |>
left_join(data_id %>% select(id, r_contact_id, r_dur_tot, r_mean_position, r_nb_visits, r_nb_flower_visited, r_dur_per_visit, r_nb_visits_per_flower)) |>
left_join(
data_proxy |>
select(id, session,
nb_flo,nb_flo_open,nb_flo_all,height_max,height_mean,nb_stem,
!!sym(paste0("oms_fem_", cols)),
!!sym(paste0("oms_mal_", cols))) |>
group_by(session) |>
mutate(across(where(is.numeric), ~ . / mean(., na.rm = TRUE), .names = "r_{.col}")) |>
ungroup() |>
select(session, id, starts_with("r_")) |>
pivot_longer(
cols = starts_with(c("r_oms")),
names_to = "sex",
names_pattern = "r_oms_(fem|mal)_.*",
values_to = "r_oms"
)
)
data_sem <- data_id_sampled_sessions |>
select(session, ID_full, type, r_SR_out, r_SR_all, poll_treat_factor,
!!sym(paste0("r_mean_nb_dist_flo_out_", cols))) |>
rename(id = ID_full,
sex = type,
r_sr = r_SR_out,
r_sr_all = r_SR_all,
ttt = poll_treat_factor) |>
left_join(data_parent_share) |>
group_by(session,sex) |>
mutate(r_mean_ps = mean_ps / mean(mean_ps,na.rm = T),
r_mean_ps_all = mean_ps_all / mean(mean_ps_all,na.rm = T)) |>
ungroup() |>
select(!c(mean_ps,mean_ps_all)) |>
left_join(data_id %>% select(id, r_contact_id, r_dur_tot, r_mean_position, r_nb_visits, r_nb_flower_visited, r_dur_per_visit, r_nb_visits_per_flower)) |>
left_join(
data_proxy |>
select(id, session,
nb_flo,nb_flo_open,nb_flo_all,height_max,height_mean,nb_stem,
!!sym(paste0("oms_fem_", cols)),
!!sym(paste0("oms_mal_", cols))) |>
group_by(session) |>
mutate(across(where(is.numeric), ~ . / mean(., na.rm = TRUE), .names = "r_{.col}")) |>
ungroup() |>
select(session, id, starts_with("r_")) |>
pivot_longer(
cols = starts_with(c("r_oms")),
names_to = "sex",
names_pattern = "r_oms_(fem|mal)_.*",
values_to = "r_oms"
)
) |>
left_join(data_q_by_female)
data_sem
data_sem <- data_id_sampled_sessions |>
select(session, ID_full, type, r_SR_out, r_SR_all, poll_treat_factor,
!!sym(paste0("r_mean_nb_dist_flo_out_", cols))) |>
rename(id = ID_full,
sex = type,
r_sr = r_SR_out,
r_sr_all = r_SR_all,
ttt = poll_treat_factor) |>
left_join(data_parent_share) |>
group_by(session,sex) |>
mutate(r_mean_ps = mean_ps / mean(mean_ps,na.rm = T),
r_mean_ps_all = mean_ps_all / mean(mean_ps_all,na.rm = T)) |>
ungroup() |>
select(!c(mean_ps,mean_ps_all)) |>
left_join(data_id %>% select(id, r_contact_id, r_dur_tot, r_mean_position, r_nb_visits, r_nb_flower_visited, r_dur_per_visit, r_nb_visits_per_flower)) |>
left_join(
data_proxy |>
select(id, session,
nb_flo,nb_flo_open,nb_flo_all,height_max,height_mean,nb_stem,
!!sym(paste0("oms_fem_", cols)),
!!sym(paste0("oms_mal_", cols))) |>
group_by(session) |>
mutate(across(where(is.numeric), ~ . / mean(., na.rm = TRUE), .names = "r_{.col}")) |>
ungroup() |>
select(session, id, starts_with("r_")) |>
pivot_longer(
cols = starts_with(c("r_oms")),
names_to = "sex",
names_pattern = "r_oms_(fem|mal)_.*",
values_to = "r_oms"
)
) |>
left_join(data_q_by_female |>
rename(id = ID_full))
data_q_by_female
data_sem <- data_id_sampled_sessions |>
select(session, ID_full, type, r_SR_out, r_SR_all, poll_treat_factor,
!!sym(paste0("r_mean_nb_dist_flo_out_", cols))) |>
rename(id = ID_full,
sex = type,
r_sr = r_SR_out,
r_sr_all = r_SR_all,
ttt = poll_treat_factor) |>
left_join(data_parent_share) |>
group_by(session,sex) |>
mutate(r_mean_ps = mean_ps / mean(mean_ps,na.rm = T),
r_mean_ps_all = mean_ps_all / mean(mean_ps_all,na.rm = T)) |>
ungroup() |>
select(!c(mean_ps,mean_ps_all)) |>
left_join(data_id %>% select(id, r_contact_id, r_dur_tot, r_mean_position, r_nb_visits, r_nb_flower_visited, r_dur_per_visit, r_nb_visits_per_flower)) |>
left_join(
data_proxy |>
select(id, session,
nb_flo,nb_flo_open,nb_flo_all,height_max,height_mean,nb_stem,
!!sym(paste0("oms_fem_", cols)),
!!sym(paste0("oms_mal_", cols))) |>
group_by(session) |>
mutate(across(where(is.numeric), ~ . / mean(., na.rm = TRUE), .names = "r_{.col}")) |>
ungroup() |>
select(session, id, starts_with("r_")) |>
pivot_longer(
cols = starts_with(c("r_oms")),
names_to = "sex",
names_pattern = "r_oms_(fem|mal)_.*",
values_to = "r_oms"
)
) |>
left_join(data_q_by_female |>
rename(id = ID_full_foc))
data_sem
data_q_by_female |>
rename(id = ID_full_foc) |>
mutate(ratio_q = q_gen / q_obs,
log_ratio_q = abs(log(ratio_q)))
data_q_by_female
data_q_by_female |>
rename(id = ID_full_foc) |>
mutate(ratio_q = q_gen / q_obs,
log_ratio_q = abs(log(ratio_q))) |>
group_by(session) |>
mutate(r_ratio_q = ratio_q / mean(ratio_q,na.rm = T))
data_q_by_female |>
rename(id = ID_full_foc) |>
mutate(ratio_q = q_gen / q_obs,
log_ratio_q = abs(log(ratio_q))) |>
group_by(session) |>
mutate(r_ratio_q = ratio_q / mean(ratio_q,na.rm = T),
r_log_ratio_q = log_ratio_q / mean(log_ratio_q))
data_q_by_female |>
rename(id = ID_full_foc) |>
mutate(ratio_q = q_gen / q_obs,
log_ratio_q = abs(log(ratio_q))) |>
group_by(session) |>
mutate(r_ratio_q = ratio_q / mean(ratio_q,na.rm = T),
r_log_ratio_q = log_ratio_q / mean(log_ratio_q,na.rm = T))
??mean
data_q_by_female |>
rename(id = ID_full_foc) |>
mutate(ratio_q = q_gen / q_obs,
log_ratio_q = abs(log(ratio_q))) |>
mutate(log_ratio_q = ifelse(is.infinite(loq_ratio_q, max(log_ratio_q), loq_ratio_q)))
data_q_by_female |>
rename(id = ID_full_foc) |>
mutate(ratio_q = q_gen / q_obs,
log_ratio_q = abs(log(ratio_q))) |>
mutate(log_ratio_q = ifelse(is.infinite(loq_ratio_q, max(log_ratio_q), log_ratio_q)))
data_q_by_female |>
rename(id = ID_full_foc) |>
mutate(ratio_q = q_gen / q_obs,
log_ratio_q = abs(log(ratio_q))) |>
mutate(log_ratio_q = ifelse(is.infinite(log_ratio_q, max(log_ratio_q), log_ratio_q)))
data_q_by_female |>
rename(id = ID_full_foc) |>
mutate(ratio_q = q_gen / q_obs,
log_ratio_q = abs(log(ratio_q))) |>
mutate(log_ratio_q = ifelse(is.infinite(log_ratio_q), max(log_ratio_q), log_ratio_q))
data_q_by_female |>
rename(id = ID_full_foc) |>
mutate(ratio_q = q_gen / q_obs,
log_ratio_q = abs(log(ratio_q))) |>
mutate(log_ratio_q = ifelse(is.infinite(log_ratio_q), max(log_ratio_q,na.rm=T), log_ratio_q))
data_q_by_female |>
rename(id = ID_full_foc) |>
mutate(ratio_q = q_gen / q_obs,
log_ratio_q = abs(log(ratio_q))) |>
mutate(log_ratio_q = ifelse(is.infinite(log_ratio_q), NA, log_ratio_q)) |>
group_by(session) |>
mutate(r_ratio_q = ratio_q / mean(ratio_q,na.rm = T),
r_log_ratio_q = log_ratio_q / mean(log_ratio_q,na.rm = T))
data_sem <- data_id_sampled_sessions |>
select(session, ID_full, type, r_SR_out, r_SR_all, poll_treat_factor,
!!sym(paste0("r_mean_nb_dist_flo_out_", cols))) |>
rename(id = ID_full,
sex = type,
r_sr = r_SR_out,
r_sr_all = r_SR_all,
ttt = poll_treat_factor) |>
left_join(data_parent_share) |>
group_by(session,sex) |>
mutate(r_mean_ps = mean_ps / mean(mean_ps,na.rm = T),
r_mean_ps_all = mean_ps_all / mean(mean_ps_all,na.rm = T)) |>
ungroup() |>
select(!c(mean_ps,mean_ps_all)) |>
left_join(data_id %>% select(id, r_contact_id, r_dur_tot, r_mean_position, r_nb_visits, r_nb_flower_visited, r_dur_per_visit, r_nb_visits_per_flower)) |>
left_join(
data_proxy |>
select(id, session,
nb_flo,nb_flo_open,nb_flo_all,height_max,height_mean,nb_stem,
!!sym(paste0("oms_fem_", cols)),
!!sym(paste0("oms_mal_", cols))) |>
group_by(session) |>
mutate(across(where(is.numeric), ~ . / mean(., na.rm = TRUE), .names = "r_{.col}")) |>
ungroup() |>
select(session, id, starts_with("r_")) |>
pivot_longer(
cols = starts_with(c("r_oms")),
names_to = "sex",
names_pattern = "r_oms_(fem|mal)_.*",
values_to = "r_oms"
)
) |>
left_join(data_q_by_female |>
rename(id = ID_full_foc) |>
mutate(ratio_q = q_gen / q_obs,
log_ratio_q = abs(log(ratio_q))) |>
# for log calculation, when infinite change for NA (but bias compared to ratio_q)
mutate(log_ratio_q = ifelse(is.infinite(log_ratio_q), NA, log_ratio_q)) |>
group_by(session) |>
mutate(r_ratio_q = ratio_q / mean(ratio_q,na.rm = T),
r_log_ratio_q = log_ratio_q / mean(log_ratio_q,na.rm = T)))
data_sem
data_sem <- data_id_sampled_sessions |>
select(session, ID_full, type, r_SR_out, r_SR_all, poll_treat_factor,
!!sym(paste0("r_mean_nb_dist_flo_out_", cols))) |>
rename(id = ID_full,
sex = type,
r_sr = r_SR_out,
r_sr_all = r_SR_all,
ttt = poll_treat_factor) |>
left_join(data_parent_share) |>
group_by(session,sex) |>
mutate(r_mean_ps = mean_ps / mean(mean_ps,na.rm = T),
r_mean_ps_all = mean_ps_all / mean(mean_ps_all,na.rm = T)) |>
ungroup() |>
select(!c(mean_ps,mean_ps_all)) |>
left_join(data_id %>% select(id, r_contact_id, r_dur_tot, r_mean_position, r_nb_visits, r_nb_flower_visited, r_dur_per_visit, r_nb_visits_per_flower)) |>
left_join(
data_proxy |>
select(id, session,
nb_flo,nb_flo_open,nb_flo_all,height_max,height_mean,nb_stem,
!!sym(paste0("oms_fem_", cols)),
!!sym(paste0("oms_mal_", cols))) |>
group_by(session) |>
mutate(across(where(is.numeric), ~ . / mean(., na.rm = TRUE), .names = "r_{.col}")) |>
ungroup() |>
select(session, id, starts_with("r_")) |>
pivot_longer(
cols = starts_with(c("r_oms")),
names_to = "sex",
names_pattern = "r_oms_(fem|mal)_.*",
values_to = "r_oms"
)
) |>
left_join(data_q_by_female |>
mutate(sex == "fem") |>
rename(id = ID_full_foc) |>
mutate(ratio_q = q_gen / q_obs,
log_ratio_q = abs(log(ratio_q))) |>
# for log calculation, when infinite change for NA (but bias compared to ratio_q)
mutate(log_ratio_q = ifelse(is.infinite(log_ratio_q), NA, log_ratio_q)) |>
group_by(session) |>
mutate(r_ratio_q = ratio_q / mean(ratio_q,na.rm = T),
r_log_ratio_q = log_ratio_q / mean(log_ratio_q,na.rm = T)))
data_sem <- data_id_sampled_sessions |>
select(session, ID_full, type, r_SR_out, r_SR_all, poll_treat_factor,
!!sym(paste0("r_mean_nb_dist_flo_out_", cols))) |>
rename(id = ID_full,
sex = type,
r_sr = r_SR_out,
r_sr_all = r_SR_all,
ttt = poll_treat_factor) |>
left_join(data_parent_share) |>
group_by(session,sex) |>
mutate(r_mean_ps = mean_ps / mean(mean_ps,na.rm = T),
r_mean_ps_all = mean_ps_all / mean(mean_ps_all,na.rm = T)) |>
ungroup() |>
select(!c(mean_ps,mean_ps_all)) |>
left_join(data_id %>% select(id, r_contact_id, r_dur_tot, r_mean_position, r_nb_visits, r_nb_flower_visited, r_dur_per_visit, r_nb_visits_per_flower)) |>
left_join(
data_proxy |>
select(id, session,
nb_flo,nb_flo_open,nb_flo_all,height_max,height_mean,nb_stem,
!!sym(paste0("oms_fem_", cols)),
!!sym(paste0("oms_mal_", cols))) |>
group_by(session) |>
mutate(across(where(is.numeric), ~ . / mean(., na.rm = TRUE), .names = "r_{.col}")) |>
ungroup() |>
select(session, id, starts_with("r_")) |>
pivot_longer(
cols = starts_with(c("r_oms")),
names_to = "sex",
names_pattern = "r_oms_(fem|mal)_.*",
values_to = "r_oms"
)
) |>
left_join(data_q_by_female |>
mutate(sex = "fem") |>
rename(id = ID_full_foc) |>
mutate(ratio_q = q_gen / q_obs,
log_ratio_q = abs(log(ratio_q))) |>
# for log calculation, when infinite change for NA (but bias compared to ratio_q)
mutate(log_ratio_q = ifelse(is.infinite(log_ratio_q), NA, log_ratio_q)) |>
group_by(session) |>
mutate(r_ratio_q = ratio_q / mean(ratio_q,na.rm = T),
r_log_ratio_q = log_ratio_q / mean(log_ratio_q,na.rm = T)))
data_sem$r_ratio_q
data_id_sampled_sessions
data_sem <- data_id_sampled_sessions |>
select(session, ID_full, type, r_SR_out, r_SR_all, poll_treat_factor,
!!sym(paste0("r_mean_nb_dist_flo_out_", cols))) |>
rename(id = ID_full,
sex = type,
r_sr = r_SR_out,
r_sr_all = r_SR_all,
ttt = poll_treat_factor) |>
left_join(data_parent_share) |>
group_by(session,sex) |>
mutate(r_mean_ps = mean_ps / mean(mean_ps,na.rm = T),
r_mean_ps_all = mean_ps_all / mean(mean_ps_all,na.rm = T)) |>
ungroup() |>
select(!c(mean_ps,mean_ps_all)) |>
left_join(data_id %>% select(id, r_contact_id, r_dur_tot, r_mean_position, r_nb_visits, r_nb_flower_visited, r_dur_per_visit, r_nb_visits_per_flower)) |>
left_join(
data_proxy |>
select(id, session,
nb_flo,nb_flo_open,nb_flo_all,height_max,height_mean,nb_stem,
!!sym(paste0("oms_fem_", cols)),
!!sym(paste0("oms_mal_", cols))) |>
group_by(session) |>
mutate(across(where(is.numeric), ~ . / mean(., na.rm = TRUE), .names = "r_{.col}")) |>
ungroup() |>
select(session, id, starts_with("r_")) |>
pivot_longer(
cols = starts_with(c("r_oms")),
names_to = "sex",
names_pattern = "r_oms_(fem|mal)_.*",
values_to = "r_oms"
)
)
data_sem
data_q_by_female |>
mutate(sex = "fem") |>
rename(id = ID_full_foc) |>
mutate(ratio_q = q_gen / q_obs,
log_ratio_q = abs(log(ratio_q))) |>
# for log calculation, when infinite change for NA (but bias compared to ratio_q)
mutate(log_ratio_q = ifelse(is.infinite(log_ratio_q), NA, log_ratio_q)) |>
group_by(session) |>
mutate(r_ratio_q = ratio_q / mean(ratio_q,na.rm = T),
r_log_ratio_q = log_ratio_q / mean(log_ratio_q,na.rm = T))
data_q_by_female |>
mutate(sex = "fem") |>
rename(id = ID_full_foc) |>
mutate(ratio_q = q_gen / q_obs,
log_ratio_q = abs(log(ratio_q))) |>
# for log calculation, when infinite change for NA (but bias compared to ratio_q)
mutate(log_ratio_q = ifelse(is.infinite(log_ratio_q), NA, log_ratio_q)) |>
group_by(session) |>
mutate(r_ratio_q = ratio_q / mean(ratio_q,na.rm = T),
r_log_ratio_q = log_ratio_q / mean(log_ratio_q,na.rm = T)) |>
select(r_ratio_q, r_log_ratio_q)
data_q_by_female |>
mutate(sex = "fem") |>
rename(id = ID_full_foc) |>
mutate(ratio_q = q_gen / q_obs,
log_ratio_q = abs(log(ratio_q))) |>
# for log calculation, when infinite change for NA (but bias compared to ratio_q)
mutate(log_ratio_q = ifelse(is.infinite(log_ratio_q), NA, log_ratio_q)) |>
group_by(session) |>
mutate(r_ratio_q = ratio_q / mean(ratio_q,na.rm = T),
r_log_ratio_q = log_ratio_q / mean(log_ratio_q,na.rm = T)) |>
ungroup() |>
select(session, id, sex, r_ratio_q, r_log_ratio_q)
data_sem <- data_id_sampled_sessions |>
select(session, ID_full, type, r_SR_out, r_SR_all, poll_treat_factor,
!!sym(paste0("r_mean_nb_dist_flo_out_", cols))) |>
rename(id = ID_full,
sex = type,
r_sr = r_SR_out,
r_sr_all = r_SR_all,
ttt = poll_treat_factor) |>
left_join(data_parent_share) |>
group_by(session,sex) |>
mutate(r_mean_ps = mean_ps / mean(mean_ps,na.rm = T),
r_mean_ps_all = mean_ps_all / mean(mean_ps_all,na.rm = T)) |>
ungroup() |>
select(!c(mean_ps,mean_ps_all)) |>
left_join(data_id %>% select(id, r_contact_id, r_dur_tot, r_mean_position, r_nb_visits, r_nb_flower_visited, r_dur_per_visit, r_nb_visits_per_flower)) |>
left_join(
data_proxy |>
select(id, session,
nb_flo,nb_flo_open,nb_flo_all,height_max,height_mean,nb_stem,
!!sym(paste0("oms_fem_", cols)),
!!sym(paste0("oms_mal_", cols))) |>
group_by(session) |>
mutate(across(where(is.numeric), ~ . / mean(., na.rm = TRUE), .names = "r_{.col}")) |>
ungroup() |>
select(session, id, starts_with("r_")) |>
pivot_longer(
cols = starts_with(c("r_oms")),
names_to = "sex",
names_pattern = "r_oms_(fem|mal)_.*",
values_to = "r_oms"
)
) |>
left_join(data_q_by_female |>
mutate(sex = "fem") |>
rename(id = ID_full_foc) |>
mutate(ratio_q = q_gen / q_obs,
log_ratio_q = abs(log(ratio_q))) |>
# for log calculation, when infinite change for NA (but bias compared to ratio_q)
mutate(log_ratio_q = ifelse(is.infinite(log_ratio_q), NA, log_ratio_q)) |>
group_by(session) |>
mutate(r_ratio_q = ratio_q / mean(ratio_q,na.rm = T),
r_log_ratio_q = log_ratio_q / mean(log_ratio_q,na.rm = T)) |>
ungroup() |>
select(session, id, sex, r_ratio_q, r_log_ratio_q))
data_sem
data_sem$r_log_ratio_q
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
target_ttt = "low"
color <- case_when(target_ttt == "low" ~ "bisque4")
color
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
targets::tar_load(data_sem_sampled_sessions)
data_sem_sampled_sessions
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
data_q_by_female
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
targets::tar_load(data_sem_sampled_sessions)
data <- data_sem_sampled_sessions
data
data %>%
select(session, id, sex, ttt, r_nb_flo_open, r_height_mean, r_oms, r_mean_ps, r_sr_all, q_obs, q_gen, nb_genot, ratio_q, r_ratio_q) %>%
mutate(r_mean_ps = ifelse(sex == "fem", NA, r_mean_ps))
data %>%
select(session, id, sex, ttt, r_nb_flo_open, r_height_mean, r_oms, r_sr_all, r_mean_ps, q_obs, q_gen, nb_genot, ratio_q, r_ratio_q) %>%
mutate(r_mean_ps = ifelse(sex == "fem", NA, r_mean_ps))
data %>%
select(session, id, sex, ttt, r_sr_all, r_oms, r_mean_ps, q_obs, q_gen, nb_genot, ratio_q, r_ratio_q, r_nb_flo_open, r_height_mean) %>%
mutate(r_mean_ps = ifelse(sex == "fem", NA, r_mean_ps))
data <- data %>%
select(session, id, sex, ttt, r_sr_all, r_oms, r_mean_ps, q_obs, q_gen, nb_genot, ratio_q, r_ratio_q, r_nb_flo_open, r_height_mean) %>%
mutate(r_mean_ps = ifelse(sex == "fem", NA, r_mean_ps))
write.table(data, "path_analyses_data.txt", quote = F, row.names = F)
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
